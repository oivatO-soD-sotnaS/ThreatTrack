generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  user      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cpbr_vulnerability {
  sla_deadline        String?
  engagement          String?
  mitigation          String?
  cvssv3_score        String?
  is_mitigated        String?
  found_by            String?
  numerical_severity  String?
  cvssv3              String?
  product             String?
  sla_days_remaining  String?
  epss_score          String?
  severity            String?
  cwe                 String?
  hash_code           String?
  references          String?
  impact              String?
  id                  String?
  reporter_id         String?
  criticality         BigInt?
  component_name      String?
  title               String?
  product_id          String?
  description         String?
  file_path           String?
  sla_age             String?
  sla_expiration_date String?
  date                String?
  vulnerability_id    String        @id(map: "vulnerability_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  BacklogItem         BacklogItem[]
  KanbanItem          KanbanItem[]
}

model user {
  id            String        @id
  name          String
  email         String        @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  score         Int           @default(0)
  BacklogItem   BacklogItem[]
  KanbanItem    KanbanItem[]
  accounts      Account[]
  sessions      Session[]
}

model KanbanColumn {
  id    String       @id @default(cuid())
  title String
  order Int
  items KanbanItem[]
}

model KanbanItem {
  id              String             @id @default(cuid())
  vulnerabilityId String             @db.Uuid
  columnId        String
  assigneeId      String?
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  assignee        user?              @relation(fields: [assigneeId], references: [id])
  column          KanbanColumn       @relation(fields: [columnId], references: [id], onDelete: Cascade)
  vulnerability   cpbr_vulnerability @relation(fields: [vulnerabilityId], references: [vulnerability_id], onDelete: Cascade)
}

model BacklogItem {
  id              String             @id @default(cuid())
  vulnerabilityId String             @db.Uuid
  assigneeId      String?
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
  assignee        user?              @relation(fields: [assigneeId], references: [id])
  vulnerability   cpbr_vulnerability @relation(fields: [vulnerabilityId], references: [vulnerability_id], onDelete: Cascade)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model teste {
  duplicate_finding   String?
  false_p             Boolean?
  sla_expiration_date String?
  out_of_scope        Boolean?
  endpoints           String?
  sla_start_date      String?
  sla_deadline        String?
  is_mitigated        Boolean?
  active              Boolean?
  numerical_severity  String?
  product_id          BigInt?
  publish_date        String?
  product             String?
  service             String?
  date                String?
  cvssv3_score        String?
  nb_occurences       String?
  description         String?
  severity            String?
  risk_accepted       Boolean?
  scanner_confidence  String?
  url                 String?
  cvssv3              String?
  violates_sla        String?
  mitigation          String?
  vulnerability_ids   String?
  epss_score          String?
  created             DateTime? @db.Timestamptz(6)
  epss_percentile     String?

  @@ignore
}
